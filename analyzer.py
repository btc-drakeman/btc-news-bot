import requests
import pandas as pd
from strategy import analyze_indicators

BASE_URL = 'https://api.mexc.com/api/v3/klines'


def fetch_ohlcv(symbol: str, interval: str = '1m', limit: int = 100):
    params = {
        'symbol': symbol,
        'interval': interval,
        'limit': limit
    }
    try:
        res = requests.get(BASE_URL, params=params, timeout=10)
        res.raise_for_status()
        raw = res.json()
        df = pd.DataFrame(raw, columns=[
            'timestamp', 'open', 'high', 'low', 'close', 'volume', 'close_time', 'quote_volume'
        ])
        df['close'] = df['close'].astype(float)
        return df
    except Exception as e:
        print(f"‚ùå {symbol} Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞ Ïã§Ìå®: {e}")
        return None


def analyze_symbol(symbol: str):
    df = fetch_ohlcv(symbol)
    if df is None or len(df) < 50:
        return None

    direction, score = analyze_indicators(df)
    if direction == 'NONE':
        return None

    price = df['close'].iloc[-1]
    entry_low = round(price * 0.995, 2)
    entry_high = round(price * 1.005, 2)
    stop_loss = round(price * 0.985, 2)
    take_profit = round(price * 1.015, 2)

    return f"""
üìä {symbol} Í∏∞Ïà† Î∂ÑÏÑù Í≤∞Í≥º
üïí ÏµúÍ∑º Í∞ÄÍ≤©: ${price:.2f}

üîµ Ï∂îÏ≤ú Î∞©Ìñ•: {direction}
üí∞ ÏßÑÏûÖ Í∂åÏû•Í∞Ä: ${entry_low} ~ ${entry_high}
üõë ÏÜêÏ†àÍ∞Ä: ${stop_loss}
üéØ ÏùµÏ†àÍ∞Ä: ${take_profit}
    """